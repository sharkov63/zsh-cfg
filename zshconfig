# Active command not found package,
# which suggests installing packages if a command was not found
. /etc/zsh_command_not_found

# Function "acm" is like "g++", but with all flags needed for ACM-style programming.
# Usage: "acm sol.cpp" (no need to specify "-o sol")
acm() {
    ulimit -s unlimited && \
        clang++ -xc++ -std=gnu++2b -DLOCAL -ulimit -O2 \
        -Wall -Wextra -pedantic -Wshadow -Wformat=2 \
        -Wfloat-equal -Wconversion \
        -Wshift-overflow -Wcast-qual -Wcast-align \
        -D_FORTIFY_SOURCE=2 -Wno-sign-conversion \
        -fsanitize=address -fsanitize=undefined -fno-sanitize-recover -fstack-protector \
        "$1" -o "${1%.*}"
}

# Like "acm", but compiles into a "release" build,
# (all optimisations)
acmfast() {
    ulimit -s unlimited && \
        clang++ -xc++ -std=gnu++2b -DLOCAL -ulimit -O3 \
        -march=native \
        "$1" -o "${1%.*}fast"
}

# Short command for all apt updates/upgrades.
aptall() {
    sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y && sudo apt autoremove --purge -y
}

# Copies data to clipboard.
# Short command for "xclip -selection clipboard"
alias -g xxclip="xclip -selection clipboard"

# Opens a file/directory with xdg-open,
# but doesn't print error messages in the terminal.
quiet-open() {
    xdg-open "$@" &> /dev/null
}

# git-settimes [-v]
#
# Set the times of a git working copy to the last commit time.
#
# Useful for large projects like LLVM: when we checkout back-and-forth
# between branches, we can omit rebuilding the whole project.
#
# Source: https://gist.github.com/tstone2077/86529356dd120eb0e51f
git-settimes() {
    SAVE_IFS=$IFS
    TIME=$(git log --pretty=format:%cd -n 1 --date=iso)
    TIME=$(date -d "$TIME" +%Y%m%d%H%M.%S)
    IFS=$(echo -en "\n\b")
    GIT_FILES=( $(git ls-files) )
    LEN=${#GIT_FILES}
    for (( START_IDX=0; START_IDX<LEN; START_IDX+=30000 )); do
        touch -m -t $TIME ${GIT_FILES[@]:$START_IDX:30000}
    done
    IFS=$SAVE_IFS
}
